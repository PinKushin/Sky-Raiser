<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sspitter</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>oenemypar</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>statetext = "running"
speed = 2;
sightrange = 96;
hp = 1;
// This next line fixes a bug that causes it to not work if it starts on a certain wall.
if(place_meeting(x - 1,y,osolidpar) = false) { direction = 180; }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///spit alarm
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///control spitting enemy
image_speed = 0;
image_index = 0;

// Check if we've run out of floor
if(place_meeting(x + lengthdir_x(speed + 1,direction - 90),y + lengthdir_y(speed + 1,direction - 90),osolidpar) = false) {

    // Rotate it so it's moving onto the next surface
    direction -= 90;
    
    // Make sure it's all the way onto the next side before doing any collision checks
    // (otherwise it bounces as it goes around the corner)
    x += hspeed;
    y += vspeed;
    
    // Make contact with the new surface
    move_contact_solid(direction - 90,speed);
}

// Else, check if we've run into a wall
else if(place_meeting(x + lengthdir_x(speed,direction),y + lengthdir_y(speed,direction),osolidpar)) {
    
    // Rotate it so it's moving up the wall
    direction += 90;
    
    // Make full contact with the wall
    move_contact_solid(direction - 90,speed);
}

image_angle = direction;

///attack
var dis = point_distance(x, y, oplayer.x, oplayer.y);
var dir = point_direction(x, y, oplayer.x, oplayer.y);

if lineofsight(oplayer) &amp;&amp; dis &lt;= sightrange {
   image_index = 1;
   speed = 0;
   if alarm[0] &lt;=0 {
      var myspit = instance_create(x, y, ospit);
      myspit.direction = dir;
      alarm[0] = room_speed / 2;
   }
   
}else{
      speed = 2;
      image_index = 0;
}
death();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw self and state
draw_set_halign(fa_center);
draw_set_valign(fa_middle);
draw_self();

if DEBUG = true {
    draw_set_alpha(.1);
    draw_circle_color(x, y, sightrange, c_red, c_red, false);
    draw_set_alpha(1);
    draw_text(x, y, statetext);
    draw_text(x, y - 32, hspeed);
    draw_text(x, y - 16, vspeed);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
